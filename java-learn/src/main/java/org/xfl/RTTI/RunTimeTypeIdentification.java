package org.xfl.RTTI;/** * @program: Java_Base * @description: 运行时类型识别 * @author: xfl * @create: 2019-02-27 10:51 **/public class RunTimeTypeIdentification {    /**     * 运行时类型识别(RTTI,Run-Time Type Identification) 是Java中非常有用的机制，在Java运行时，RTTI维护类的相关信息。     *     * 多态(Polymorphism)就是基于RTTI实现的，RTTI的主要功能是由Class类实现的。     *     * Class类是类的类(class of classes)。如果说类是对象的抽象和集合，那么Class类就是对类的抽象和集合。     *     * 每个Class类的对象Instance代表一个其他的类。As follow。     */    public static void main(String[] args) throws ClassNotFoundException {        Human a = new Human();        Class c1 = a.getClass();        System.out.println(c1.getName());        Human women = new Women();        Class c2 = women.getClass();        System.out.println(c2.getName());        Class c3 = Human.class;        System.out.println(c3.getName());        System.out.println(c3.getPackage());        Class c4 = Class.forName("org.xfl.RTTI.RunTimeTypeIdentification");        System.out.println(c4.getName());    }    static class Human{        public String name;        public String setName(String name){            return this.name = name;        }    }    static class Women extends Human {        Integer age;        private Integer setAge(Integer age) {            return this.age = age;        }    }}