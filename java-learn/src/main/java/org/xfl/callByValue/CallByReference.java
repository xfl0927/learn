package org.xfl.callByValue;/** * @program: learn * @description: 引用传递 * @author: xfl * @create: 2018-09-07 16:24 **/public class CallByReference {    static class Man{        public Man() {        }        public Man(String name, int age) {            this.name = name;            this.age = age;        }        private String name;        private int age;        public String getName() {            return name;        }        public void setName(String name) {            this.name = name;        }        public int getAge() {            return age;        }        public void setAge(int age) {            this.age = age;        }        @Override        public String toString() {            return "Man{" +                    "name='" + name + '\'' +                    ", age=" + age +                    '}';        }    }    public static void updateRef(Man ref){        ref.setAge(10);        ref.setName("rose");    }    /**     * 由结果可知Man类的Instance -> man拷贝其值(引用所指向的heap)给ref，由于两个不同的reference指向同一个堆内存，     * 所以ref的修改引发了man的变化     */    public static void main(String[] args){        Man man = new Man();        man.setName("jake");        man.setAge(20);        System.out.println("before:"+man.toString());        updateRef(man);        System.out.println("after:" + man.toString());    }}