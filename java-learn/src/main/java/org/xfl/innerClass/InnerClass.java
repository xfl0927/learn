package org.xfl.innerClass;/** * @program: learn * @description: 内部类 ,作用： * 1.实现多继承 * 2.内部类拥有外围类的所有元素的访问权限，可以忽视外部类private、protected * @author: xfl * @create: 2018-07-23 15:25 **/public class InnerClass {    {        System.out.println("Out Object NO-Static.");    }    static {        System.out.println("Out Object Static.");    }    public InnerClass() {        System.out.println("Out Object Constructor.");    }    private String name;    private String work;    public void display() {        System.out.println("Out Object display.");        class MethodInner {            void methodInnerDisplay() {                work = "by method inner Object ,nothing to do.";                System.out.println(work);            }        }    }    public class PublicInner extends Cinema {        public PublicInner() {            System.out.println("Public Inner Object constructor.");        }        {            System.out.println("Public inner Object NO-Static.");        }        private String name = "inner field name.";        void innerDisplay() {            String name ;            name = "name defined by inner Object method.";            System.out.println(name);            System.out.println(this.name);            System.out.println(InnerClass.this.name);        }    }    private class PrivateInner extends MultiExtends implements Movie{        @Override        public void show() {        }    }    public static void main(String[] args) {        InnerClass innerClass = new InnerClass();        PublicInner publicInner = innerClass.new PublicInner();        publicInner.innerDisplay();        publicInner.show();    }}