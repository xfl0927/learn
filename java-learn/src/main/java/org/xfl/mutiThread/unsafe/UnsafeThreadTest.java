package org.xfl.mutiThread.unsafe;import java.util.ArrayList;import java.util.List;/** * @program: learn * @description: * @author: xfl * @create: 2018-07-25 10:15 **/public class UnsafeThreadTest {    public static void main(String[] args){        //实例化count        Count count = new Count();        Runnable runnable = () -> {            for (int i = 0 ; i < 10000; i++){               count.increment();            }        };        List<Thread> threads = new ArrayList<>();        /**         * 创建10个线程，执行同一个Runnable,理论num值为10000*10         */        for (int i = 0; i < 10; i++){            Thread thread = new Thread(runnable);            threads.add(thread);            thread.start();        }        /**         * 当线程结束时获取num值         */        while (true){            if (allThreadTerminated(threads)){                System.out.println(count.getNum());                break;            }        }    }    /**     * 判断线程存活状态，存活表示没结束，返回false；反之返回true     * @param threads     * @return     */    private static boolean allThreadTerminated(List<Thread> threads){        for (Thread thread:threads){            if(thread.isAlive()){                return false;            }        }        return true;    }}