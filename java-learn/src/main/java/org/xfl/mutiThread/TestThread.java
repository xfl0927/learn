package org.xfl.mutiThread;import org.xfl.mutiThread.unsafe.Count;/** * @program: learn * @description: * @author: xfl * @create: 2018-07-25 10:12 **/public class TestThread extends Thread{    private String name;    public TestThread(String name) {        this.name = name;    }    private Count count;    public TestThread(Count count){        this.count = count;    }    @Override    public void run() {        super.run();        for (int i = 0;i < 10000; i++){            count.increment();        }        System.out.println(count.getNum());    }    public static void main(String[] args){        //线程共享变量 线程操作中若涉及共享变量中的共享资源 则需考虑线程的安全        Object o = new Object();       Count count = new Count();       for (int i = 0; i < 10 ;i++){           //此时 创建testThread instance           TestThread testThread = new TestThread(count);           // 过程 instance start() -> run()           // 执行的是每个线程instance的run() method，run()操作共享变量count,每个线程实例均执行10000次,           testThread.start();       }       System.out.println("result:" + count.getNum());    }}